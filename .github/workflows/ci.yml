name: CI

on:
  schedule:
    # Every sunday at 02:00
    - cron: 0 2 * * 0
  pull_request:
  push:
    branches:
      - main
      - '[0-9].[0-9]'

jobs:
  tests:
    name: Tests PHP ${{ matrix.php }} (Symfony ${{ matrix.symfony }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          # Only PHP supported versions: https://www.php.net/supported-versions.php
          - '7.4'
          - '8.0'
          - '8.1'
        symfony:
          # Only Symfony supported versions: https://symfony.com/releases
          - '4.4.*'
          - '5.4.*'
          - '6.0.*'
          - '6.1.*'
        include:
          - php: '8.1'
            symfony: '5.4.*'
            bootable: true
            quality: true
          - php: '7.4'
            laminas: '^3.4'
        exclude:
          # Symfony 6.0.* requires PHP >= 8.0
          - symfony: '6.0.*'
            php: '7.4'
          # Symfony 6.1.* requires PHP >= 8.1
          - symfony: '6.1.*'
            php: '7.4'
          - symfony: '6.1.*'
            php: '8.0'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2, flex, php-cs-fixer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Configure Symfony
        run: composer config extra.symfony.require "${{ matrix.symfony }}"
      - name: Configure dependencies
        if: matrix.laminas
        run: composer require laminas/laminas-code:${{ matrix.laminas }} --dev --no-install --no-update
      - name: Update project dependencies
        run: composer update --no-progress --ansi --prefer-stable
      - name: Bundle is bootable
        if: ${{ matrix.bootable && github.event_name == 'push' && github.ref_name == 'main' }}
        run: |
          composer create-project "symfony/skeleton:${{ matrix.symfony }}" flex
          cd flex
          composer config extra.symfony.allow-contrib true
          composer req --ignore-platform-reqs tilleuls/forgot-password-bundle:dev-${{ github.ref_name }}
      - name: Run php-cs-fixer tests
        run: php-cs-fixer fix --diff --dry-run
        if: matrix.quality
      - name: Run PHPUnit tests
        run: vendor/bin/simple-phpunit --colors=always --testdox
      - name: Run Behat tests
        run: |
          mkdir -p features/app/cache/test/doctrine/orm/Proxies features/app/logs
          vendor/bin/behat
      - name: Run Behat tests with jms/serializer-bundle
        run: |
          mkdir -p features/app/cache/jmsserializer/doctrine/orm/Proxies features/app/logs
          vendor/bin/behat -p jmsserializer
